import{G as d}from"./navigation-BiZBkmgm.js";class g{fields;constructor(e={}){this.fields=e.fields??"id,name,mimeType,webViewLink,webContentLink,thumbnailLink,driveId",console.log("[DriveClient] Inicializado com fields:",this.fields)}async getAccessToken(){console.log("[DriveClient] Solicitando token de acesso..."),await d.authenticate();const e=d.getAccessToken();if(!e)throw new Error("Token de acesso inválido (Drive).");return console.log("[DriveClient] Token de acesso obtido com sucesso."),e}async request(e,o){console.log("[DriveClient] Requisição →",e,o?.method||"GET");const t=await this.getAccessToken(),s=o?.body instanceof FormData,i=e.includes("?")?"&":"?",a=`${e}${i}supportsAllDrives=true&includeItemsFromAllDrives=true`,n=await fetch(a,{...o,headers:{Authorization:`Bearer ${t}`,...s?{}:{"Content-Type":"application/json"},...o?.headers||{}}});if(console.log("[DriveClient] Resposta status:",n.status),!n.ok){let r="";try{r=await n.text()}catch{}try{r=JSON.parse(r)?.error?.message||r}catch{}throw new Error(`Drive ${n.status}: ${r||n.statusText}`)}const l=n.headers.get("content-type")||"";if(n.status===204)return;if(l.includes("application/json")){const r=await n.json();return console.log("[DriveClient] Resposta JSON:",r),r}const c=await n.text();return console.log("[DriveClient] Resposta texto:",c),c}async uploadImage(e,o){console.log("[DriveClient] Iniciando upload multipart para pasta:",o);const t={name:e.name,mimeType:e.type||"application/octet-stream",parents:[o]};console.log("[DriveClient] Metadados:",t);const s=new FormData;s.append("metadata",new Blob([JSON.stringify(t)],{type:"application/json; charset=UTF-8"})),s.append("file",e);const a=await this.request("https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id",{method:"POST",body:s});return console.log("[DriveClient] Upload concluído. ID:",a.id),a}async uploadImageResumable(e,o){console.log("[DriveClient] Iniciando upload resumable para pasta:",o);const t=await this.getAccessToken(),s="https://www.googleapis.com/upload/drive/v3/files?uploadType=resumable&fields=id";console.log("[DriveClient] Criando sessão resumable...");const i=await fetch(`${s}&supportsAllDrives=true&includeItemsFromAllDrives=true`,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify({name:e.name,parents:[o],mimeType:e.type||"application/octet-stream"})});if(!i.ok)throw new Error(`Init resumable: ${await i.text()}`);const a=i.headers.get("Location");if(!a)throw new Error("Resumable: header Location ausente.");console.log("[DriveClient] Sessão resumable criada. Location:",a),console.log("[DriveClient] Enviando chunks...");const n=await fetch(a,{method:"PUT",headers:{"Content-Type":e.type||"application/octet-stream"},body:e});if(!n.ok)throw new Error(`PUT resumable: ${await n.text()}`);const l=await n.json();return console.log("[DriveClient] Upload resumable concluído. ID:",l.id),l}async setPublic(e){console.log("[DriveClient] Tornando arquivo público:",e);const o=`https://www.googleapis.com/drive/v3/files/${encodeURIComponent(e)}/permissions`;await this.request(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({role:"reader",type:"anyone"})}),console.log("[DriveClient] Arquivo agora é público.")}async addUserPermission(e,o,t="writer",s=!1){console.log(`{DriveClient] Adicionando permissão ${t} para ${o} no arquivo:`,e);const i=`https://www.googleapis.com/drive/v3/files/${encodeURIComponent(e)}/permissions?sendNotificationEmail=${s?"true":"false"}`;await this.request(i,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"user",role:t,emailAddress:o})}),console.log("[DriveClient] Permissão adicionada.")}async deleteFile(e){console.log("[DriveClient] Excluindo arquivo:",e);const o=`https://www.googleapis.com/drive/v3/files/${encodeURIComponent(e)}`;await this.request(o,{method:"DELETE"}),console.log("[DriveClient] Arquivo excluído.")}static viewUrl(e,o){const t=o?`https://lh3.googleusercontent.com/d/${encodeURIComponent(e)}=s${o}`:`https://lh3.googleusercontent.com/d/${encodeURIComponent(e)}`;return console.log("[DriveClient] Gerando viewUrl:",t),t}static directUrl(e){const o=`https://drive.google.com/uc?id=${encodeURIComponent(e)}`;return console.log("[DriveClient] Gerando directUrl:",o),o}static extractDriveId(e){console.log("[DriveClient] Extraindo ID do valor:",e);const o=(e||"").trim();if(!o)return null;if(!o.includes("://"))return o;const t=o.match(/[?&]id=([a-zA-Z0-9_-]+)/);if(t)return t[1];const s=o.match(/\/d\/([a-zA-Z0-9_-]+)/);if(s)return s[1];const i=o.match(/\/download\?id=([a-zA-Z0-9_-]+)/);return i?i[1]:null}}export{g as DriveClient};
